{"ast":null,"code":"import{createApi,fetchBaseQuery}from'@reduxjs/toolkit/query/react';var cryptoApiHeaders={'x-rapidapi-host':'coinranking1.p.rapidapi.com','x-rapidapi-key':'249c77c98fmshd416e8cc0d28032p182cbdjsnf4af5e757542'};var baseUrl='https://coinranking1.p.rapidapi.com';var createRequest=function createRequest(url){return{url:url,headers:cryptoApiHeaders};};export var cryptoApi=createApi({reducerPath:'cryptoApi',baseQuery:fetchBaseQuery({baseUrl:baseUrl}),endpoints:function endpoints(builder){return{getCryptos:builder.query({query:function query(count){return createRequest(\"/coins?limit=\".concat(count));}}),getExchanges:builder.query({query:function query(){return createRequest('/exchanges');}}),getCryptoDetails:builder.query({query:function query(coinId){return createRequest(\"/coin/\".concat(coinId));}}),getCryptoHistory:builder.query({query:function query(_ref){var coinId=_ref.coinId,timeperiod=_ref.timeperiod;return createRequest(\"coin/\".concat(coinId,\"/history/\").concat(timeperiod));}})};}});var useGetCryptosQuery=cryptoApi.useGetCryptosQuery,useGetCryptoDetailsQuery=cryptoApi.useGetCryptoDetailsQuery,useGetExchangesQuery=cryptoApi.useGetExchangesQuery,useGetCryptoHistoryQuery=cryptoApi.useGetCryptoHistoryQuery;// var options = {\n//     method: 'GET',\n//     url: 'https://coinranking1.p.rapidapi.com/exchanges',\n//     headers: {\n//       'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\n//       'x-rapidapi-key': '249c77c98fmshd416e8cc0d28032p182cbdjsnf4af5e757542'\n//     }\n//   };\nexport{useGetCryptosQuery,useGetCryptoDetailsQuery,useGetExchangesQuery,useGetCryptoHistoryQuery};","map":{"version":3,"sources":["/Users/moechama/Documents/Website-Development/crypto-api/src/services/cryptoApi.js"],"names":["createApi","fetchBaseQuery","cryptoApiHeaders","baseUrl","createRequest","url","headers","cryptoApi","reducerPath","baseQuery","endpoints","builder","getCryptos","query","count","getExchanges","getCryptoDetails","coinId","getCryptoHistory","timeperiod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetExchangesQuery","useGetCryptoHistoryQuery"],"mappings":"AAAA,OAASA,SAAT,CAAoBC,cAApB,KAA0C,8BAA1C,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,CACrB,kBAAmB,6BADE,CAErB,iBAAkB,oDAFG,CAAzB,CAMA,GAAMC,CAAAA,OAAO,CAAG,qCAAhB,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,GAAD,QAAU,CAAEA,GAAG,CAAHA,GAAF,CAAOC,OAAO,CAAEJ,gBAAhB,CAAV,EAAtB,CAEA,MAAO,IAAMK,CAAAA,SAAS,CAAGP,SAAS,CAAE,CAChCQ,WAAW,CAAE,WADmB,CAEhCC,SAAS,CAAER,cAAc,CAAC,CAAEE,OAAO,CAAPA,OAAF,CAAD,CAFO,CAGhCO,SAAS,CAAE,mBAACC,OAAD,QAAc,CACrBC,UAAU,CAAED,OAAO,CAACE,KAAR,CAAc,CACtBA,KAAK,CAAE,eAAEC,KAAF,QAAcV,CAAAA,aAAa,wBAAiBU,KAAjB,EAA3B,EADe,CAAd,CADS,CAIrBC,YAAY,CAAEJ,OAAO,CAACE,KAAR,CAAc,CACxBA,KAAK,CAAE,uBAAMT,CAAAA,aAAa,CAAC,YAAD,CAAnB,EADiB,CAAd,CAJO,CAOnBY,gBAAgB,CAAEL,OAAO,CAACE,KAAR,CAAc,CAC9BA,KAAK,CAAE,eAACI,MAAD,QAAYb,CAAAA,aAAa,iBAAUa,MAAV,EAAzB,EADuB,CAAd,CAPC,CAUnBC,gBAAgB,CAAEP,OAAO,CAACE,KAAR,CAAc,CAC9BA,KAAK,CAAE,wBAAGI,CAAAA,MAAH,MAAGA,MAAH,CAAWE,UAAX,MAAWA,UAAX,OAA4Bf,CAAAA,aAAa,gBAASa,MAAT,qBAA2BE,UAA3B,EAAzC,EADuB,CAAd,CAVC,CAAd,EAHqB,CAAF,CAA3B,CAmBM,GAAQC,CAAAA,kBAAR,CAAyGb,SAAzG,CAAQa,kBAAR,CAA4BC,wBAA5B,CAAyGd,SAAzG,CAA4Bc,wBAA5B,CAAsDC,oBAAtD,CAAyGf,SAAzG,CAAsDe,oBAAtD,CAA4EC,wBAA5E,CAAyGhB,SAAzG,CAA4EgB,wBAA5E,CAKb;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nconst cryptoApiHeaders = {\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\n    'x-rapidapi-key': '249c77c98fmshd416e8cc0d28032p182cbdjsnf4af5e757542'\n\n}\n\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\n\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders})\n\nexport const cryptoApi = createApi ({\n    reducerPath: 'cryptoApi',\n    baseQuery: fetchBaseQuery({ baseUrl }),\n    endpoints: (builder) => ({\n        getCryptos: builder.query({\n            query: ( count )  => createRequest(`/coins?limit=${count}`)\n        }),\n        getExchanges: builder.query({\n            query: () => createRequest('/exchanges'),\n          }),\n          getCryptoDetails: builder.query({\n            query: (coinId) => createRequest(`/coin/${coinId}`),\n          }),\n          getCryptoHistory: builder.query({\n            query: ({ coinId, timeperiod }) => createRequest(`coin/${coinId}/history/${timeperiod}`),\n          }),\n        }),\n      });\n\n      export const { useGetCryptosQuery, useGetCryptoDetailsQuery, useGetExchangesQuery, useGetCryptoHistoryQuery } = cryptoApi;\n\n\n\n\n// var options = {\n//     method: 'GET',\n//     url: 'https://coinranking1.p.rapidapi.com/exchanges',\n//     headers: {\n//       'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\n//       'x-rapidapi-key': '249c77c98fmshd416e8cc0d28032p182cbdjsnf4af5e757542'\n//     }\n//   };"]},"metadata":{},"sourceType":"module"}