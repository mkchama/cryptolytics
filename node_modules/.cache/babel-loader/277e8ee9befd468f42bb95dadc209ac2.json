{"ast":null,"code":"var _jsxFileName = \"/Users/moechama/Documents/crypto-api/src/components/Cryptocurrencies.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport millify from 'millify';\nimport { Link } from 'react-router-dom';\nimport { Card, Row, Col, Input } from 'antd';\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cryptocurrencies = ({\n  simplified\n}) => {\n  _s();\n\n  var _cryptosList$data;\n\n  const count = simplified ? 10 : 100;\n  const {\n    data: cryptosList,\n    isFetching\n  } = useGetCryptosQuery(count);\n  const [cryptos, setCryptos] = useState(cryptosList === null || cryptosList === void 0 ? void 0 : (_cryptosList$data = cryptosList.data) === null || _cryptosList$data === void 0 ? void 0 : _cryptosList$data.coins);\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    var _cryptosList$data2, _cryptoList, _cryptoList$data;\n\n    setCryptos(cryptosList === null || cryptosList === void 0 ? void 0 : (_cryptosList$data2 = cryptosList.data) === null || _cryptosList$data2 === void 0 ? void 0 : _cryptosList$data2.coins);\n    const filteredData = (_cryptoList = cryptoList) === null || _cryptoList === void 0 ? void 0 : (_cryptoList$data = _cryptoList.data) === null || _cryptoList$data === void 0 ? void 0 : _cryptoList$data.coins.filter(coin => coin.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  }, [cryptosList, searchTerm]);\n  if (isFetching) return 'Loading...';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-crypto\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Search Cryptocurrency\",\n        onChange: e => setSearchTerm(e.traget.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [32, 32],\n      className: \"crypto-card-container\",\n      children: cryptos === null || cryptos === void 0 ? void 0 : cryptos.map(currency => /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        sm: 12,\n        lg: 6,\n        className: \"crypto-card\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/crypto/${currency.id}`,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: `${currency.rank}. ${currency.name}`,\n            extra: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"crypto-image\",\n              src: currency.iconUrl\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 32\n            }, this),\n            hoverable: true,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Price: \", millify(currency.price)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Market Cap: \", millify(currency.marketCap)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Daily Change: \", millify(currency.change), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, currency.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Cryptocurrencies, \"4yrU9jQXf14vnEzcXY2zES9yxg8=\", false, function () {\n  return [useGetCryptosQuery];\n});\n\n_c = Cryptocurrencies;\nexport default Cryptocurrencies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cryptocurrencies\");","map":{"version":3,"sources":["/Users/moechama/Documents/crypto-api/src/components/Cryptocurrencies.jsx"],"names":["React","useState","useEffect","millify","Link","Card","Row","Col","Input","useGetCryptosQuery","Cryptocurrencies","simplified","count","data","cryptosList","isFetching","cryptos","setCryptos","coins","searchTerm","setSearchTerm","filteredData","cryptoList","filter","coin","name","toLowerCase","includes","e","traget","value","map","currency","id","rank","iconUrl","price","marketCap","change"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport millify from 'millify'\nimport { Link } from 'react-router-dom'\nimport { Card, Row, Col, Input } from 'antd'\n\nimport { useGetCryptosQuery } from '../services/cryptoApi'\n\n\nconst Cryptocurrencies = ({ simplified }) => {\n    const count = simplified ? 10 : 100;\n    const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n    const [cryptos, setCryptos] = useState(cryptosList?.data?.coins);\n    const [searchTerm, setSearchTerm] = useState('');\n\n    useEffect(() => {\n        setCryptos(cryptosList?.data?.coins);\n\n        const filteredData = cryptoList?.data?.coins.filter((coin) => coin.name.toLowerCase().includes(searchTerm.toLowerCase()));\n    }, [cryptosList, searchTerm]);\n\n    if(isFetching) return 'Loading...';\n\n    return (\n       <>\n        <div className=\"search-crypto\">\n            <Input placeholder=\"Search Cryptocurrency\" onChange={(e) => setSearchTerm(e.traget.value)} />\n        </div>\n        <Row gutter={[32, 32]} className=\"crypto-card-container\">\n            {cryptos?.map((currency) => (\n                <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\n                    <Link to={`/crypto/${currency.id}`}>\n                        <Card \n                        title={`${currency.rank}. ${currency.name}`}\n                        extra={<img className=\"crypto-image\" src={currency.iconUrl}/>}\n                        hoverable\n                        >\n                            <p>Price: {millify(currency.price)}</p>\n                            <p>Market Cap: {millify(currency.marketCap)}</p>\n                            <p>Daily Change: {millify(currency.change)}%</p>\n\n                        </Card>\n                        </Link>\n\n                </Col>\n            )\n            )}\n        </Row>\n       </>\n    )\n}\n\nexport default Cryptocurrencies\n"]},"metadata":{},"sourceType":"module"}