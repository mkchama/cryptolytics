{"version":3,"sources":["images/icon.svg","components/Navbar.jsx","services/cryptoApi.js","components/Cryptocurrencies.jsx","components/Loader.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","components/Homepage.jsx","services/cryptoNewsApi.js","components/News.jsx","components/Exchanges.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","undefined","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","style","color","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getExchanges","getCryptoDetails","coinId","getCryptoHistory","timeperiod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetExchangesQuery","useGetCryptoHistoryQuery","Cryptocurrencies","simplified","cryptosList","data","isFetching","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","coins","filter","coin","name","toLowerCase","includes","placeholder","onChange","e","target","value","gutter","map","currency","xs","sm","lg","id","title","rank","extra","iconUrl","hoverable","millify","price","marketCap","change","Loader","Typography","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","Text","Option","Select","CryptoDetails","useParams","setTimeperiod","cryptoDetails","stats","DollarCircleOutlined","NumberOutlined","volume","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","HTMLReactParser","description","links","link","type","href","rel","Homepage","globalStats","span","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","News","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","image","thumbnail","contentUrl","alt","substring","provider","moment","datePublished","startOf","fromNow","Panel","Collapse","Exchanges","exchangesList","exchanges","exchange","showArrow","header","marketShare","App","exact","path","textAlign","configureStore","reducer","ReactDOM","render","basename","store","document","getElementById"],"mappings":"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","file":"static/js/main.56b67051.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon.7bbc478c.svg\";","import React, { useState, useEffect } from 'react';\nimport { Button, Menu, Typography, Avatar } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined } from '@ant-design/icons';\n\nimport icon from '../images/icon.svg';\n\nconst Navbar = () => {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(undefined);\n\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n\n    window.addEventListener('resize', handleResize);\n\n    handleResize();\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (screenSize <= 800) {\n      setActiveMenu(false);\n    } else {\n      setActiveMenu(true);\n    }\n\n  }, [screenSize]);\n\n  \n\n  return (\n    <div  className=\"nav-container\">\n      <div className=\"logo-container\">\n        <Avatar src={icon} size=\"large\" />\n        <Typography.Title level={2} className=\"logo\"><Link style={{color:\"#fff\"}}  to=\"/\">Cryptolytics</Link></Typography.Title>\n        <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}><MenuOutlined /></Button>\n      </div>\n      {activeMenu && (\n      <Menu theme=\"dark\">\n        <Menu.Item   icon={<HomeOutlined />}>\n          <Link to=\"/\">Home</Link>\n        </Menu.Item>\n        <Menu.Item icon={<FundOutlined />}>\n          <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\n        </Menu.Item>\n        <Menu.Item icon={<MoneyCollectOutlined />}>\n          <Link to=\"/exchanges\">Exchanges</Link>\n        </Menu.Item>\n        <Menu.Item icon={<BulbOutlined />}>\n          <Link to=\"/news\">News</Link>\n        </Menu.Item>\n      </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Navbar;","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nconst cryptoApiHeaders = {\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\n    'x-rapidapi-key': '249c77c98fmshd416e8cc0d28032p182cbdjsnf4af5e757542'\n\n}\n\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\n\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders})\n\nexport const cryptoApi = createApi ({\n    reducerPath: 'cryptoApi',\n    baseQuery: fetchBaseQuery({ baseUrl }),\n    endpoints: (builder) => ({\n        getCryptos: builder.query({\n            query: ( count )  => createRequest(`/coins?limit=${count}`)\n        }),\n        getExchanges: builder.query({\n            query: () => createRequest('/exchanges'),\n          }),\n          getCryptoDetails: builder.query({\n            query: (coinId) => createRequest(`/coin/${coinId}`),\n          }),\n          getCryptoHistory: builder.query({\n            query: ({ coinId, timeperiod }) => createRequest(`coin/${coinId}/history/${timeperiod}`),\n          }),\n        }),\n      });\n\n      export const { useGetCryptosQuery, useGetCryptoDetailsQuery, useGetExchangesQuery, useGetCryptoHistoryQuery } = cryptoApi;\n\n\n\n\n// var options = {\n//     method: 'GET',\n//     url: 'https://coinranking1.p.rapidapi.com/exchanges',\n//     headers: {\n//       'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\n//       'x-rapidapi-key': '249c77c98fmshd416e8cc0d28032p182cbdjsnf4af5e757542'\n//     }\n//   };","import React, { useState, useEffect } from 'react'\nimport millify from 'millify'\nimport { Link } from 'react-router-dom'\nimport { Card, Row, Col, Input } from 'antd'\n\nimport { useGetCryptosQuery } from '../services/cryptoApi'\n\n\nconst Cryptocurrencies = ({ simplified }) => {\n    const count = simplified ? 10 : 100;\n    const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n    const [cryptos, setCryptos] = useState([]);\n    const [searchTerm, setSearchTerm] = useState('');\n\n    useEffect(() => {\n\n        const filteredData = cryptosList?.data?.coins.filter((coin) => coin.name.toLowerCase().includes(searchTerm.toLowerCase()));\n        \n        setCryptos(filteredData);\n    \n    }, [cryptosList, searchTerm]);\n\n    if(isFetching) return 'Loading...';\n\n    return (\n       <>\n        {!simplified && (\n            <div className=\"search-crypto\">\n                <Input placeholder=\"Search Cryptocurrency\" onChange={(e) => setSearchTerm(e.target.value)} />\n            </div>\n        )}\n        \n        <Row gutter={[32, 32]} className=\"crypto-card-container\">\n            {cryptos?.map((currency) => (\n                <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\n                    <Link to={`/crypto/${currency.id}`}>\n                        <Card \n                        title={`${currency.rank}. ${currency.name}`}\n                        extra={<img className=\"crypto-image\" src={currency.iconUrl}/>}\n                        hoverable\n                        >\n                            <p>Price: {millify(currency.price)}</p>\n                            <p>Market Cap: {millify(currency.marketCap)}</p>\n                            <p>Daily Change: {millify(currency.change)}%</p>\n\n                        </Card>\n                        </Link>\n\n                </Col>\n            )\n            )}\n        </Row>\n       </>\n    )\n}\n\nexport default Cryptocurrencies\n","import React from 'react';\nimport { Spin } from 'antd';\n\nconst Loader = () => (\n  <div className=\"loader\">\n    <Spin />\n  </div>\n);\n\nexport default Loader;","import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Col, Row, Typography } from 'antd';\n\nconst { Title } = Typography;\n\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\n  const coinPrice = [];\n  const coinTimestamp = [];\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinPrice.push(coinHistory?.data?.history[i].price);\n  }\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinTimestamp.push(new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString());\n  }\n\n  const data = {\n    labels: coinTimestamp,\n    datasets: [\n      {\n        label: 'Price In USD',\n        data: coinPrice,\n        fill: false,\n        backgroundColor: '#d3a3c9',\n        borderColor: '#d3a3c9',\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <>\n      <Row className=\"chart-header\">\n        <Title level={2} className=\"chart-title\">{coinName} Price Chart </Title>\n        <Col className=\"price-container\">\n          <Title level={5} className=\"price-change\">Change: {coinHistory?.data?.change}%</Title>\n          <Title level={5} className=\"current-price\">Current {coinName} Price: $ {currentPrice}</Title>\n        </Col>\n      </Row>\n      <Line data={data} options={options} />\n    </>\n  );\n};\n\nexport default LineChart;","import React, { useState } from 'react';\nimport HTMLReactParser from 'html-react-parser';\nimport { useParams } from 'react-router-dom';\nimport millify from 'millify';\nimport { Col, Row, Typography, Select } from 'antd';\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\n\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\nimport Loader from './Loader';\nimport LineChart from './LineChart';\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams();\n  const [timeperiod, setTimeperiod] = useState('7d');\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n  const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timeperiod });\n  const cryptoDetails = data?.data?.coin;\n\n  if (isFetching) return <Loader />;\n\n  const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\n\n  const stats = [\n    { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\n    { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\n    { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\n    { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\n    { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\n  ];\n\n  const genericStats = [\n    { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\n    { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\n    { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\n    { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\n    { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\n  ];\n\n  return (\n    <Col className=\"coin-detail-container\">\n      <Col className=\"coin-heading-container\">\n        <Title level={2} className=\"coin-name\">\n          {data?.data?.coin.name} ({data?.data?.coin.slug}) Price\n        </Title>\n        <p>{cryptoDetails.name} live price in US Dollar (USD). View value statistics, market cap and supply.</p>\n      </Col>\n      <Select defaultValue=\"7d\" className=\"select-timeperiod\" placeholder=\"Select Timeperiod\" onChange={(value) => setTimeperiod(value)}>\n        {time.map((date) => <Option key={date}>{date}</Option>)}\n      </Select>\n      <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name} />\n      <Col className=\"stats-container\">\n        <Col className=\"coin-value-statistics\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Value Statistics</Title>\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\n          </Col>\n          {stats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n        <Col className=\"other-stats-info\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">Other Stats Info</Title>\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\n          </Col>\n          {genericStats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n      </Col>\n      <Col className=\"coin-desc-link\">\n        <Row className=\"coin-desc\">\n          <Title level={3} className=\"coin-details-heading\">What is {cryptoDetails.name}?</Title>\n          {HTMLReactParser(cryptoDetails.description)}\n        </Row>\n        <Col className=\"coin-links\">\n          <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Links</Title>\n          {cryptoDetails.links?.map((link) => (\n            <Row className=\"coin-link\" key={link.name}>\n              <Title level={5} className=\"link-name\">{link.type}</Title>\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">{link.name}</a>\n            </Row>\n          ))}\n        </Col>\n      </Col>\n    </Col>\n  );\n};\n\nexport default CryptoDetails;","import React from 'react'\nimport millify from 'millify'\nimport { Typography, Row, Col, Statistic } from 'antd'\nimport { Link } from 'react-router-dom'\n\nimport { useGetCryptosQuery } from '../services/cryptoApi'\nimport { Cryptocurrencies, News } from \"../components\"\n\n\nconst { Title } = Typography;\n\nconst Homepage = () => {\n    const { data, isFetching } = useGetCryptosQuery(10);\n    const globalStats = data?.data?.stats;\n\n    if(isFetching) return 'Loading...';\n\n    return (\n        <> \n        <Title level={2} className=\"heading\">\n            Global Crypto Stats\n        </Title>\n        <Row>\n            <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} /></Col>\n            <Col span={12}><Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)} /></Col>\n            <Col span={12}><Statistic title=\"Total Market Cap\" value={millify(globalStats.totalMarketCap)} /></Col>\n            <Col span={12}><Statistic title=\"Total 24h Volume\" value={millify(globalStats.total24hVolume)} /></Col>\n            <Col span={12}><Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)} /></Col>\n\n        </Row>\n        <div className=\"home-heading-container\">\n            <Title level={2} className=\"home-title\">Top 10 Cryptocurrencies</Title>\n            <Title level={3} className=\"show-more\"><Link to=\"/cryptocurrencies\">Show More</Link></Title>\n\n        </div>\n        <Cryptocurrencies simplified/>\n        <div className=\"home-heading-container\">\n            <Title level={2} className=\"home-title\">Latest Crypto News</Title>\n            <Title level={3} className=\"show-more\"><Link to=\"/news\">Show More</Link></Title>\n\n        </div>\n        <News simplified/>\n        </>\n    )\n}\n\nexport default Homepage\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nconst cryptoNewsHeaders = {\n    'x-bingapis-sdk': 'true',\n    'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\n    'x-rapidapi-key': '249c77c98fmshd416e8cc0d28032p182cbdjsnf4af5e757542'\n    \n}\n\nconst baseUrl = \"https://bing-news-search1.p.rapidapi.com/\"\n\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders})\n\n\nexport const cryptoNewsApi = createApi ({\n    reducerPath: 'cryptoNewsApi',\n    baseQuery: fetchBaseQuery({ baseUrl }),\n    endpoints: (builder) => ({\n        getCryptoNews: builder.query({\n            query: ( { newsCategory, count } )  => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`)\n        })\n    })\n});\n\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;","import React, { useState } from 'react';\nimport { Select, Typography, Row, Col, Avatar, Card } from 'antd';\nimport moment from 'moment';\n\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi';\nimport Loader from './Loader';\n\nconst demoImage = 'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News';\n\nconst { Text, Title } = Typography;\nconst { Option } = Select;\n\nconst News = ({ simplified }) => {\n  const [newsCategory, setNewsCategory] = useState('Cryptocurrency');\n  const { data } = useGetCryptosQuery(100);\n  const { data: cryptoNews } = useGetCryptoNewsQuery({ newsCategory, count: simplified ? 6 : 12 });\n\n  if (!cryptoNews?.value) return <Loader />;\n\n  return (\n    <Row gutter={[24, 24]}>\n      {!simplified && (\n        <Col span={24}>\n          <Select\n            showSearch\n            className=\"select-news\"\n            placeholder=\"Select a Crypto\"\n            optionFilterProp=\"children\"\n            onChange={(value) => setNewsCategory(value)}\n            filterOption={(input, option) => option.children[0].toLowerCase().indexOf(input.toLowerCase()) >= 0}\n          >\n            <Option value=\"Cryptocurency\">Cryptocurrency</Option>\n            {data?.data?.coins?.map((currency) => <Option value={currency.name}>{currency.name}</Option>)}\n          </Select>\n        </Col>\n      )}\n      {cryptoNews.value.map((news, i) => (\n        <Col xs={24} sm={12} lg={8} key={i}>\n          <Card hoverable className=\"news-card\">\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\n              <div className=\"news-image-container\">\n                <Title className=\"news-title\" level={4}>{news.name}</Title>\n                <img className=\"img\" src={news?.image?.thumbnail?.contentUrl || demoImage} alt=\"\"  />\n              </div>\n              <p>{news.description.length > 100 ? `${news.description.substring(0, 100)}...` : news.description}</p>\n              <div className=\"provider-container\">\n                <div>\n                  <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage} alt=\"\" />\n                  <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\n                </div>\n                <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\n              </div>\n            </a>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  );\n};\n\nexport default News;","import React from 'react';\nimport millify from 'millify';\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\nimport HTMLReactParser from 'html-react-parser';\n\nimport { useGetExchangesQuery } from '../services/cryptoApi';\nimport Loader from './Loader';\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nconst Exchanges = () => {\n  const { data, isFetching } = useGetExchangesQuery();\n  const exchangesList = data?.data?.exchanges;\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      <Row>\n        <Col span={6}>Exchanges</Col>\n        <Col span={6}>24h Trade Volume</Col>\n        <Col span={6}>Markets</Col>\n        <Col span={6}>Change</Col>\n      </Row>\n      <Row>\n        {exchangesList.map((exchange) => (\n          <Col span={24}>\n            <Collapse>\n              <Panel\n                key={exchange.id}\n                showArrow={false}\n                header={(\n                  <Row key={exchange.id}>\n                    <Col span={6}>\n                      <Text><strong>{exchange.rank}.</strong></Text>\n                      <Avatar className=\"exchange-image\" src={exchange.iconUrl} />\n                      <Text><strong>{exchange.name}</strong></Text>\n                    </Col>\n                    <Col span={6}>${millify(exchange.volume)}</Col>\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\n                  </Row>\n                  )}\n              >\n                {HTMLReactParser(exchange.description || '')}\n              </Panel>\n            </Collapse>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Exchanges;","import React from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport { Layout, Typography, Space } from 'antd';\n\nimport { Exchanges, Homepage, News, Cryptocurrencies, CryptoDetails, Navbar } from './components';\nimport './App.css';\n\nconst App = () => (\n  <div className=\"app\">\n    <div className=\"navbar\">\n      <Navbar />\n    </div>\n    <div className=\"main\">\n      <Layout>\n        <div className=\"routes\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Homepage />\n            </Route>\n            <Route exact path=\"/exchanges\">\n              <Exchanges />\n            </Route>\n            <Route exact path=\"/cryptocurrencies\">\n              <Cryptocurrencies />\n            </Route>\n            <Route exact path=\"/crypto/:coinId\">\n              <CryptoDetails />\n            </Route>\n            <Route exact path=\"/news\">\n              <News />\n            </Route>\n          </Switch>\n        </div>\n      </Layout>\n      <div className=\"footer\">\n        <Typography.Title level={5} style={{ color: 'white', textAlign: 'center' }}>Copyright © 2021 | {' '}\n          <Link style={{color:\"#fff\"}} to=\"/\">\n            Cryptolytics Inc.\n          </Link> <br />\n          All Rights Reserved\n        </Typography.Title>\n        <Space>\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/exchanges\">Exchanges</Link>\n          <Link to=\"/news\">News</Link>\n        </Space>\n      </div>\n    </div>\n  </div>\n);\n\nexport default App;","import { configureStore } from '@reduxjs/toolkit' ;\n\nimport { cryptoApi } from '../services/cryptoApi';\nimport { cryptoNewsApi } from '../services/cryptoNewsApi';\n\nexport default configureStore( {\n    reducer: {\n        [cryptoApi.reducerPath]: cryptoApi.reducer,\n        [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\n\n    },\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom'\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from './app/store'\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n<Router basename='/'>\n    <Provider store={store}>\n        <App />\n    </Provider>\n    </Router>\n    , document.getElementById('root') \n);"],"sourceRoot":""}